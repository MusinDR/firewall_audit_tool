from PyQt6.QtCore import QObject, QThread, pyqtSignal


class FetchWorker(QObject):
    finished = pyqtSignal()
    error = pyqtSignal(str)
    progress = pyqtSignal(str)
    result = pyqtSignal(dict, dict, list)  # policies, dict_objects, all_objects

    def __init__(self, client: 'CheckpointClient'):
        super().__init__()
        self.client = client

    def run(self):
        try:
            self.progress.emit("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ CheckPoint...")
            if not self.client.login():
                self.error.emit("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
                self.finished.emit()
                return

            self.progress.emit("üì° –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏...")
            policies, dict_objects = self.client.get_all_policies()

            self.progress.emit("üì° –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã...")
            all_objects = self.client.get_all_objects()

            self.progress.emit("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã")
            self.result.emit(policies, dict_objects, all_objects)
        except Exception as e:
            self.error.emit(str(e))
        finally:
            self.client.logout()
            self.finished.emit()
